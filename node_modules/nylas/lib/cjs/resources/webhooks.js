"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Webhooks = void 0;
const resource_js_1 = require("./resource.js");
/**
 * Nylas Webhooks API
 *
 * The Nylas Webhooks API allows your application to receive notifications in real-time when certain events occur.
 */
class Webhooks extends resource_js_1.Resource {
    /**
     * List all webhook destinations for the application
     * @returns The list of webhook destinations
     */
    list({ overrides } = {}) {
        return super._list({
            overrides,
            path: `/v3/webhooks`,
        });
    }
    /**
     * Return a webhook destination
     * @return The webhook destination
     */
    find({ webhookId, overrides, }) {
        return super._find({
            path: `/v3/webhooks/${webhookId}`,
            overrides,
        });
    }
    /**
     * Create a webhook destination
     * @returns The created webhook destination
     */
    create({ requestBody, overrides, }) {
        return super._create({
            path: `/v3/webhooks`,
            requestBody,
            overrides,
        });
    }
    /**
     * Update a webhook destination
     * @returns The updated webhook destination
     */
    update({ webhookId, requestBody, overrides, }) {
        return super._update({
            path: `/v3/webhooks/${webhookId}`,
            requestBody,
            overrides,
        });
    }
    /**
     * Delete a webhook destination
     * @returns The deletion response
     */
    destroy({ webhookId, overrides, }) {
        return super._destroy({
            path: `/v3/webhooks/${webhookId}`,
            overrides,
        });
    }
    /**
     * Update the webhook secret value for a destination
     * @returns The updated webhook destination with the webhook secret
     */
    rotateSecret({ webhookId, overrides, }) {
        return super._update({
            path: `/v3/webhooks/${webhookId}/rotate-secret`,
            requestBody: {},
            overrides,
        });
    }
    /**
     * Get the current list of IP addresses that Nylas sends webhooks from
     * @returns The list of IP addresses that Nylas sends webhooks from
     */
    ipAddresses({ overrides } = {}) {
        return super._find({
            path: `/v3/webhooks/ip-addresses`,
            overrides,
        });
    }
    /**
     * Extract the challenge parameter from a URL
     * @param url The URL sent by Nylas containing the challenge parameter
     * @returns The challenge parameter
     */
    extractChallengeParameter(url) {
        const urlObject = new URL(url);
        const challengeParameter = urlObject.searchParams.get('challenge');
        if (!challengeParameter) {
            throw new Error('Invalid URL or no challenge parameter found.');
        }
        return challengeParameter;
    }
}
exports.Webhooks = Webhooks;
